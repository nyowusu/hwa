{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../HowTo.svelte",
    "../../ProgressBar.svelte",
    "../../Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import HowTo from \"./components/HowTo.svelte\";\n  import Timer from \"./components/Timer.svelte\";\n\n  let audio;\n\n  function timerEnds() {\n    audio.play();\n  }\n</script>\n\n<h1>Handwashing App</h1>\n\n<Timer on:finished=\"{timerEnds}\"></Timer>\n<HowTo></HowTo>\n\n<h3>\n  <a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\"\n    >Picture source</a\n  >\n  <a href=\"https://freesound.org/people/metrostock99/sounds/345086/\"\n    >Sound source</a\n  >\n</h3>\n\n<audio bind:this=\"{audio}\">\n  <source src=\"build/sound.wav\" />\n</audio>\n\n<style>\n  h1,\n  h3 {\n    text-align: center;\n  }\n</style>\n",
    "<div bp=\"grid\">\n  <img\n    bp=\"offset-5@md 4@md 12@sm\"\n    src=\"images/handwash.gif\"\n    alt=\"how to wash your hands\"\n  />\n</div>\n\n<style>\n  img {\n    width: 100%;\n  }\n</style>\n",
    "<script>\n  export let progress = 0;\n</script>\n\n<div bp=\"grid\">\n  <div bp=\"offset-5@md 4@md 12@sm\" class=\"progress-container\">\n    <div class=\"progress-bar\" style=\"width:  { progress }%;\">\n      <span class=\"sr-only\">{progress}%</span>\n    </div>\n  </div>\n</div>\n\n<style>\n  .progress-container {\n    margin: 20px 0;\n    border: solid 1px rgb(194, 194, 194);\n  }\n\n  .progress-bar {\n    height: 30px;\n    background-color: rgb(77, 199, 55);\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import ProgressBar from \"./ProgressBar.svelte\";\n\n  // create event dispatch\n  const dispatch = createEventDispatcher();\n  const totalSeconds = 20;\n  let secondLeft = totalSeconds;\n  let isRunning = false;\n  $: progress = (totalSeconds - secondLeft) * 5;\n\n  function startTimer() {\n    function countDown() {\n      secondLeft -= 1;\n      if (secondLeft == 0) {\n        clearInterval(interval);\n        isRunning = false;\n        secondLeft = totalSeconds;\n        dispatch(\"finished\", {\n          text: \"Timer Completed\",\n        });\n      }\n    }\n    isRunning = true;\n    const interval = setInterval(countDown, 1000);\n  }\n</script>\n\n<div bp=\"grid\">\n  <h2 bp=\"offset-5@md 4@md 12@sm\">Seconds Left: {secondLeft}</h2>\n</div>\n\n<ProgressBar {progress}></ProgressBar>\n\n<div bp=\"grid\">\n  <button\n    bp=\"offset-5@md 4@md 12@sm\"\n    class=\"start\"\n    on:click=\"{startTimer}\"\n    disabled=\"{isRunning}\"\n  >\n    Start\n  </button>\n</div>\n\n<style>\n  h2 {\n    margin: 0;\n  }\n\n  .start {\n    background-color: rgb(154, 73, 73);\n    width: 100%;\n    margin: 10px 0;\n    box-shadow: 3px 3px 5px 2px #ccc;\n  }\n\n  .start:disabled {\n    background-color: grey;\n    box-shadow: none;\n    cursor: not-allowed;\n    transform: translateY(3px);\n  }\n\n  .start:active {\n    box-shadow: none;\n    transform: translateY(3px);\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA8BE,gBAAE,CACF,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,AACpB,CAAC;ACxBD,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,AACb,CAAC;ACED,mBAAmB,eAAC,CAAC,AACnB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AAED,aAAa,eAAC,CAAC,AACb,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,AACpC,CAAC;ACyBD,EAAE,cAAC,CAAC,AACF,MAAM,CAAE,CAAC,AACX,CAAC,AAED,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,AAClC,CAAC,AAED,oBAAM,SAAS,AAAC,CAAC,AACf,gBAAgB,CAAE,IAAI,CACtB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,WAAW,CACnB,SAAS,CAAE,WAAW,GAAG,CAAC,AAC5B,CAAC,AAED,oBAAM,OAAO,AAAC,CAAC,AACb,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,WAAW,GAAG,CAAC,AAC5B,CAAC"
}